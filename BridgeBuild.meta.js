Bridge.assembly("BridgeBuild", function ($asm, globals) {
    "use strict";


    var $m = Bridge.setMetadata,
        $n = [System,Pidroh.TextRendering,Pidroh.ConsoleApp.Turnbased,System.Collections.Generic,Pidroh.ConsoleApp.Turnbased.Happs,Pidroh.TurnBased.TextRendering,System.Collections];
    $m("Pidroh.TurnBased.TextRendering.ModeSelectionScreen", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Draw","t":8,"pi":[{"n":"f","pt":$n[0].Single,"ps":0}],"sn":"Draw","rt":$n[0].Void,"p":[$n[0].Single]},{"a":2,"n":"Enter","t":8,"sn":"Enter","rt":$n[0].Void},{"a":2,"n":"GetBoard","t":8,"sn":"GetBoard","rt":$n[1].TextBoard},{"a":2,"n":"Input","t":16,"rt":$n[0].Int32,"g":{"a":2,"n":"get_Input","t":8,"rt":$n[0].Int32,"fg":"Input","box":function ($v) { return Bridge.box($v, System.Int32);}},"s":{"a":2,"n":"set_Input","t":8,"p":[$n[0].Int32],"rt":$n[0].Void,"fs":"Input"},"fn":"Input"},{"a":2,"n":"battleResult","t":4,"rt":$n[2].BattleResult,"sn":"battleResult"},{"a":2,"n":"mode","t":4,"rt":$n[0].Int32,"sn":"mode","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"screenStage","t":4,"rt":$n[0].Int32,"sn":"screenStage","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"selection","t":4,"rt":$n[0].Int32,"sn":"selection","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"textWorld","t":4,"rt":$n[1].TextWorld,"sn":"textWorld"},{"a":2,"n":"timeAttack","t":4,"rt":$n[0].Boolean,"sn":"timeAttack","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"wannaLeave","t":4,"rt":$n[0].Int32,"sn":"wannaLeave","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"youLose","t":4,"rt":$n[0].String,"sn":"youLose"},{"a":1,"n":"youWin","t":4,"rt":$n[0].String,"sn":"youWin"}]}; });
    $m("Pidroh.TurnBased.TextRendering.ScreenUtils", function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"}]}; });
    $m("Pidroh.ConsoleApp.Turnbased.RandomSupplier", function () { return {"att":1048961,"a":2,"s":true,"m":[{"a":2,"n":"RandomElement","is":true,"t":8,"pi":[{"n":"array","pt":System.Array.type(System.Object),"ps":0}],"tpc":1,"tprm":["T"],"sn":"RandomElement","rt":System.Object,"p":[System.Array.type(System.Object)]},{"a":2,"n":"Range","is":true,"t":8,"pi":[{"n":"min","pt":$n[0].Int32,"ps":0},{"n":"max","pt":$n[0].Int32,"ps":1}],"sn":"Range","rt":$n[0].Int32,"p":[$n[0].Int32,$n[0].Int32],"box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"Generate","is":true,"t":16,"rt":Function,"g":{"a":2,"n":"get_Generate","t":8,"rt":Function,"fg":"Generate","is":true},"s":{"a":2,"n":"set_Generate","t":8,"p":[Function],"rt":$n[0].Void,"fs":"Generate","is":true},"fn":"Generate"}]}; });
    $m("Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[0].Int32],"pi":[{"n":"mode","pt":$n[0].Int32,"ps":0}],"sn":"ctor"},{"a":2,"n":"BasicConfig","t":8,"pi":[{"n":"basicConfig","pt":$n[2].BattleBasicConfig,"ps":0}],"sn":"BasicConfig","rt":$n[0].Void,"p":[$n[2].BattleBasicConfig]},{"a":1,"n":"CalculateAttackMultiplier","t":8,"pi":[{"n":"actor","pt":$n[2].TurnBaseTryValues.BattleEntity,"ps":0}],"sn":"CalculateAttackMultiplier","rt":$n[0].Single,"p":[$n[2].TurnBaseTryValues.BattleEntity],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"CalculateDefenderMultiplier","t":8,"pi":[{"n":"actor","pt":$n[2].TurnBaseTryValues.BattleEntity,"ps":0}],"sn":"CalculateDefenderMultiplier","rt":$n[0].Single,"p":[$n[2].TurnBaseTryValues.BattleEntity],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"ChangePhase","t":8,"pi":[{"n":"phase","pt":$n[2].TurnBaseTryValues.BattlePhase,"ps":0}],"sn":"ChangePhase","rt":$n[0].Void,"p":[$n[2].TurnBaseTryValues.BattlePhase]},{"a":2,"n":"EnemyGenerateMoves","t":8,"sn":"EnemyGenerateMoves","rt":$n[0].Void},{"a":2,"n":"ExecuteMove","t":8,"pi":[{"n":"actor","pt":$n[2].TurnBaseTryValues.BattleEntity,"ps":0},{"n":"turn","pt":$n[0].Int32,"ps":1}],"sn":"ExecuteMove","rt":$n[0].Void,"p":[$n[2].TurnBaseTryValues.BattleEntity,$n[0].Int32]},{"a":2,"n":"ExecuteMoves","t":8,"sn":"ExecuteMoves","rt":$n[0].Void},{"a":1,"n":"ExecutePhase","t":8,"sn":"ExecutePhase","rt":$n[0].Void},{"a":4,"n":"FinishPreviousTick","t":8,"sn":"FinishPreviousTick","rt":$n[0].Void},{"a":2,"n":"Init","t":8,"sn":"Init","rt":$n[0].Void},{"a":2,"n":"InputDone","t":8,"pi":[{"n":"input","pt":$n[2].Input,"ps":0}],"sn":"InputDone","rt":$n[0].Void,"p":[$n[2].Input]},{"a":4,"n":"IsOver","t":8,"sn":"IsOver","rt":$n[0].Boolean,"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":4,"n":"IsVictory","t":8,"sn":"IsVictory","rt":$n[0].Boolean,"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"MoveChosen","t":8,"pi":[{"n":"moveType","pt":$n[2].TurnBaseTryValues.MoveType,"ps":0}],"sn":"MoveChosen","rt":$n[0].Void,"p":[$n[2].TurnBaseTryValues.MoveType]},{"a":1,"n":"RandomPosition","is":true,"t":8,"pi":[{"n":"e","pt":$n[2].TurnBaseTryValues.BattleEntity,"ps":0}],"sn":"RandomPosition","rt":$n[0].Void,"p":[$n[2].TurnBaseTryValues.BattleEntity]},{"a":4,"n":"Reset","t":8,"sn":"Reset","rt":$n[0].Void},{"a":2,"n":"Tick","t":8,"sn":"Tick","rt":$n[0].Void},{"a":2,"n":"Update","t":8,"pi":[{"n":"delta","pt":$n[0].Single,"ps":0}],"sn":"Update","rt":$n[0].Void,"p":[$n[0].Single]},{"a":2,"n":"attackDatas","t":4,"rt":System.Array.type(Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.AttackMove),"sn":"attackDatas"},{"a":2,"n":"battleResult","t":4,"rt":$n[2].BattleResult,"sn":"battleResult"},{"a":2,"n":"battleState","t":4,"rt":$n[2].TurnBaseTryValues.BattleState,"sn":"battleState"},{"a":1,"n":"enemyMoves","t":4,"rt":System.Array.type(Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.MoveType),"sn":"enemyMoves"},{"a":2,"n":"entities","t":4,"rt":$n[3].List$1(Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.BattleEntity),"sn":"entities"},{"a":2,"n":"happManager","t":4,"rt":$n[4].HappManager,"sn":"happManager"},{"a":2,"n":"inputs","t":4,"rt":$n[3].List$1(Pidroh.ConsoleApp.Turnbased.Input),"sn":"inputs"},{"a":1,"n":"movementMoves","t":4,"rt":$n[3].Dictionary$2(Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.MoveType,Pidroh.ConsoleApp.Turnbased.Point),"sn":"movementMoves"},{"a":1,"n":"nEnemies","t":4,"rt":$n[0].Int32,"sn":"nEnemies","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"playerHand","t":4,"rt":$n[3].List$1(Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.MoveType),"sn":"playerHand"},{"a":2,"n":"timeToChoose","t":4,"rt":$n[0].Single,"sn":"timeToChoose","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"timeToChooseMax","t":4,"rt":$n[0].Single,"sn":"timeToChooseMax","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}}]}; });
    $m("Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.BattleState", function () { return {"td":$n[2].TurnBaseTryValues,"att":1048578,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"actingEntity","t":4,"rt":$n[0].Int32,"sn":"actingEntity","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"moveTick_Now","t":4,"rt":$n[2].Value,"sn":"moveTick_Now"},{"a":2,"n":"moveTick_Total","t":4,"rt":$n[2].Value,"sn":"moveTick_Total"},{"a":2,"n":"phase","t":4,"rt":$n[2].TurnBaseTryValues.BattlePhase,"sn":"phase","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.BattlePhase, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.BattlePhase));}},{"a":2,"n":"turn","t":4,"rt":$n[2].Value,"sn":"turn"},{"a":2,"n":"turnsPerPhase","t":4,"rt":$n[2].Value,"sn":"turnsPerPhase"}]}; });
    $m("Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.BattleEntity", function () { return {"td":$n[2].TurnBaseTryValues,"att":1048578,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Alive","t":16,"rt":$n[0].Boolean,"g":{"a":2,"n":"get_Alive","t":8,"rt":$n[0].Boolean,"fg":"Alive","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"fn":"Alive"},{"a":2,"n":"Dead","t":16,"rt":$n[0].Boolean,"g":{"a":2,"n":"get_Dead","t":8,"rt":$n[0].Boolean,"fg":"Dead","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},"fn":"Dead"},{"a":2,"n":"PositionV2D","t":16,"rt":$n[1].Vector2D,"g":{"a":2,"n":"get_PositionV2D","t":8,"rt":$n[1].Vector2D,"fg":"PositionV2D"},"fn":"PositionV2D"},{"a":2,"n":"Type","t":16,"rt":$n[2].TurnBaseTryValues.EntityType,"g":{"a":2,"n":"get_Type","t":8,"rt":$n[2].TurnBaseTryValues.EntityType,"fg":"Type","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.EntityType, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.EntityType));}},"s":{"a":2,"n":"set_Type","t":8,"p":[$n[2].TurnBaseTryValues.EntityType],"rt":$n[0].Void,"fs":"Type"},"fn":"Type"},{"a":4,"n":"active","t":4,"rt":$n[2].Value,"sn":"active"},{"a":2,"n":"damageMultiplier","t":4,"rt":$n[0].Single,"sn":"damageMultiplier","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":4,"n":"drawLife","t":4,"rt":$n[0].Boolean,"sn":"drawLife","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":4,"n":"drawTurn","t":4,"rt":$n[0].Boolean,"sn":"drawTurn","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"element","t":4,"rt":$n[2].TurnBaseTryValues.Element,"sn":"element","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.Element, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.Element));}},{"a":2,"n":"graphic","t":4,"rt":$n[0].Int32,"sn":"graphic","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"life","t":4,"rt":$n[2].Value,"sn":"life"},{"a":2,"n":"maxPos","t":4,"rt":$n[2].Point,"sn":"maxPos"},{"a":2,"n":"minPos","t":4,"rt":$n[2].Point,"sn":"minPos"},{"a":2,"n":"moves","t":4,"rt":System.Array.type(Pidroh.ConsoleApp.Turnbased.Value),"sn":"moves"},{"a":2,"n":"pos","t":4,"rt":$n[2].Point,"sn":"pos"},{"a":4,"n":"randomPosition","t":4,"rt":$n[0].Boolean,"sn":"randomPosition","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":4,"n":"value","t":4,"rt":$n[2].Value,"sn":"value"}]}; });
    $m("Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.MoveType", function () { return {"td":$n[2].TurnBaseTryValues,"att":258,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"DoNothing","is":true,"t":4,"rt":$n[2].TurnBaseTryValues.MoveType,"sn":"DoNothing","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.MoveType, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.MoveType));}},{"a":2,"n":"Fire","is":true,"t":4,"rt":$n[2].TurnBaseTryValues.MoveType,"sn":"Fire","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.MoveType, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.MoveType));}},{"a":2,"n":"Ice","is":true,"t":4,"rt":$n[2].TurnBaseTryValues.MoveType,"sn":"Ice","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.MoveType, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.MoveType));}},{"a":2,"n":"MoveDown","is":true,"t":4,"rt":$n[2].TurnBaseTryValues.MoveType,"sn":"MoveDown","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.MoveType, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.MoveType));}},{"a":2,"n":"MoveLeft","is":true,"t":4,"rt":$n[2].TurnBaseTryValues.MoveType,"sn":"MoveLeft","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.MoveType, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.MoveType));}},{"a":2,"n":"MoveRight","is":true,"t":4,"rt":$n[2].TurnBaseTryValues.MoveType,"sn":"MoveRight","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.MoveType, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.MoveType));}},{"a":2,"n":"MoveUp","is":true,"t":4,"rt":$n[2].TurnBaseTryValues.MoveType,"sn":"MoveUp","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.MoveType, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.MoveType));}},{"a":2,"n":"NormalShot","is":true,"t":4,"rt":$n[2].TurnBaseTryValues.MoveType,"sn":"NormalShot","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.MoveType, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.MoveType));}},{"a":2,"n":"Thunder","is":true,"t":4,"rt":$n[2].TurnBaseTryValues.MoveType,"sn":"Thunder","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.MoveType, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.MoveType));}}]}; });
    $m("Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.AttackMove", function () { return {"td":$n[2].TurnBaseTryValues,"att":1048842,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[2].TurnBaseTryValues.Element,$n[2].TurnBaseTryValues.MoveType],"pi":[{"n":"element","pt":$n[2].TurnBaseTryValues.Element,"ps":0},{"n":"moveType","pt":$n[2].TurnBaseTryValues.MoveType,"ps":1}],"sn":"$ctor1"},{"a":2,"n":"element","t":4,"rt":$n[2].TurnBaseTryValues.Element,"sn":"element","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.Element, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.Element));}},{"a":2,"n":"moveType","t":4,"rt":$n[2].TurnBaseTryValues.MoveType,"sn":"moveType","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.MoveType, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.MoveType));}}]}; });
    $m("Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.HappTag", function () { return {"td":$n[2].TurnBaseTryValues,"att":258,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"AttackHit","is":true,"t":4,"rt":$n[2].TurnBaseTryValues.HappTag,"sn":"AttackHit","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.HappTag, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.HappTag));}},{"a":2,"n":"AttackMiss","is":true,"t":4,"rt":$n[2].TurnBaseTryValues.HappTag,"sn":"AttackMiss","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.HappTag, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.HappTag));}},{"a":2,"n":"DamageTaken","is":true,"t":4,"rt":$n[2].TurnBaseTryValues.HappTag,"sn":"DamageTaken","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.HappTag, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.HappTag));}},{"a":2,"n":"MovementFail","is":true,"t":4,"rt":$n[2].TurnBaseTryValues.HappTag,"sn":"MovementFail","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.HappTag, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.HappTag));}}]}; });
    $m("Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.BattlePhase", function () { return {"td":$n[2].TurnBaseTryValues,"att":258,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"EnemyMoveChoice","is":true,"t":4,"rt":$n[2].TurnBaseTryValues.BattlePhase,"sn":"EnemyMoveChoice","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.BattlePhase, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.BattlePhase));}},{"a":2,"n":"ExecuteMove","is":true,"t":4,"rt":$n[2].TurnBaseTryValues.BattlePhase,"sn":"ExecuteMove","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.BattlePhase, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.BattlePhase));}},{"a":2,"n":"HandRecharge","is":true,"t":4,"rt":$n[2].TurnBaseTryValues.BattlePhase,"sn":"HandRecharge","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.BattlePhase, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.BattlePhase));}},{"a":2,"n":"PickHands","is":true,"t":4,"rt":$n[2].TurnBaseTryValues.BattlePhase,"sn":"PickHands","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.BattlePhase, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.BattlePhase));}}]}; });
    $m("Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.EntityType", function () { return {"td":$n[2].TurnBaseTryValues,"att":258,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"enemy","is":true,"t":4,"rt":$n[2].TurnBaseTryValues.EntityType,"sn":"enemy","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.EntityType, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.EntityType));}},{"a":2,"n":"hero","is":true,"t":4,"rt":$n[2].TurnBaseTryValues.EntityType,"sn":"hero","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.EntityType, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.EntityType));}},{"a":2,"n":"paneleffect","is":true,"t":4,"rt":$n[2].TurnBaseTryValues.EntityType,"sn":"paneleffect","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.EntityType, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.EntityType));}},{"a":2,"n":"pickup","is":true,"t":4,"rt":$n[2].TurnBaseTryValues.EntityType,"sn":"pickup","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.EntityType, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.EntityType));}}]}; });
    $m("Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.Element", function () { return {"td":$n[2].TurnBaseTryValues,"att":258,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Fire","is":true,"t":4,"rt":$n[2].TurnBaseTryValues.Element,"sn":"Fire","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.Element, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.Element));}},{"a":2,"n":"Ice","is":true,"t":4,"rt":$n[2].TurnBaseTryValues.Element,"sn":"Ice","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.Element, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.Element));}},{"a":2,"n":"None","is":true,"t":4,"rt":$n[2].TurnBaseTryValues.Element,"sn":"None","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.Element, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.Element));}},{"a":2,"n":"Thunder","is":true,"t":4,"rt":$n[2].TurnBaseTryValues.Element,"sn":"Thunder","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.Element, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.TurnBaseTryValues.Element));}}]}; });
    $m("Pidroh.ConsoleApp.Turnbased.Point", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[0].Int32,$n[0].Int32],"pi":[{"n":"x","pt":$n[0].Int32,"ps":0},{"n":"y","pt":$n[0].Int32,"ps":1}],"sn":"$ctor1"},{"a":2,"n":"Set","t":8,"pi":[{"n":"x","pt":$n[0].Int32,"ps":0},{"n":"y","pt":$n[0].Int32,"ps":1}],"sn":"Set","rt":$n[0].Void,"p":[$n[0].Int32,$n[0].Int32]},{"a":2,"n":"op_Addition","is":true,"t":8,"pi":[{"n":"p1","pt":$n[2].Point,"ps":0},{"n":"p2","pt":$n[2].Point,"ps":1}],"sn":"op_Addition","rt":$n[2].Point,"p":[$n[2].Point,$n[2].Point]},{"a":2,"n":"op_Equality","is":true,"t":8,"pi":[{"n":"c1","pt":$n[2].Point,"ps":0},{"n":"c2","pt":$n[2].Point,"ps":1}],"sn":"op_Equality","rt":$n[0].Boolean,"p":[$n[2].Point,$n[2].Point],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"op_Inequality","is":true,"t":8,"pi":[{"n":"c1","pt":$n[2].Point,"ps":0},{"n":"c2","pt":$n[2].Point,"ps":1}],"sn":"op_Inequality","rt":$n[0].Boolean,"p":[$n[2].Point,$n[2].Point],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"op_Subtraction","is":true,"t":8,"pi":[{"n":"p1","pt":$n[2].Point,"ps":0},{"n":"p2","pt":$n[2].Point,"ps":1}],"sn":"op_Subtraction","rt":$n[2].Point,"p":[$n[2].Point,$n[2].Point]},{"a":2,"n":"down","is":true,"t":4,"rt":$n[2].Point,"sn":"down","ro":true},{"a":2,"n":"left","is":true,"t":4,"rt":$n[2].Point,"sn":"left","ro":true},{"a":2,"n":"right","is":true,"t":4,"rt":$n[2].Point,"sn":"right","ro":true},{"a":2,"n":"up","is":true,"t":4,"rt":$n[2].Point,"sn":"up","ro":true},{"a":2,"n":"x","t":4,"rt":$n[2].Value,"sn":"x"},{"a":2,"n":"y","t":4,"rt":$n[2].Value,"sn":"y"}]}; });
    $m("Pidroh.ConsoleApp.Turnbased.Value", function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":4,"n":"Set","t":8,"pi":[{"n":"v","pt":$n[0].Int32,"ps":0}],"sn":"Set","rt":$n[0].Void,"p":[$n[0].Int32]},{"a":2,"n":"op_Addition","is":true,"t":8,"pi":[{"n":"c1","pt":$n[2].Value,"ps":0},{"n":"c2","pt":$n[0].Single,"ps":1}],"sn":"op_Addition","rt":$n[2].Value,"p":[$n[2].Value,$n[0].Single]},{"a":2,"n":"op_Equality","is":true,"t":8,"pi":[{"n":"c1","pt":$n[2].Value,"ps":0},{"n":"c2","pt":$n[2].Value,"ps":1}],"sn":"op_Equality","rt":$n[0].Boolean,"p":[$n[2].Value,$n[2].Value],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"op_Implicit","is":true,"t":8,"pi":[{"n":"d","pt":$n[2].Value,"ps":0}],"sn":"op_Implicit","rt":$n[0].Int32,"p":[$n[2].Value],"box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"op_Implicit","is":true,"t":8,"pi":[{"n":"d","pt":$n[2].Value,"ps":0}],"sn":"op_Implicit$1","rt":$n[0].Single,"p":[$n[2].Value],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"op_Inequality","is":true,"t":8,"pi":[{"n":"c1","pt":$n[2].Value,"ps":0},{"n":"c2","pt":$n[2].Value,"ps":1}],"sn":"op_Inequality","rt":$n[0].Boolean,"p":[$n[2].Value,$n[2].Value],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"op_Subtraction","is":true,"t":8,"pi":[{"n":"c1","pt":$n[2].Value,"ps":0},{"n":"c2","pt":$n[0].Single,"ps":1}],"sn":"op_Subtraction","rt":$n[0].Single,"p":[$n[2].Value,$n[0].Single],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"Val","t":16,"rt":$n[0].Single,"g":{"a":2,"n":"get_Val","t":8,"rt":$n[0].Single,"fg":"Val","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":2,"n":"set_Val","t":8,"p":[$n[0].Single],"rt":$n[0].Void,"fs":"Val"},"fn":"Val"},{"a":2,"n":"valAsEnum","t":16,"rt":$n[0].Enum,"s":{"a":2,"n":"set_valAsEnum","t":8,"p":[$n[0].Enum],"rt":$n[0].Void,"fs":"valAsEnum"},"fn":"valAsEnum"}]}; });
    $m("Pidroh.ConsoleApp.Turnbased.BattleResult", function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"result","t":4,"rt":$n[0].Int32,"sn":"result","box":function ($v) { return Bridge.box($v, System.Int32);}}]}; });
    $m("Pidroh.ConsoleApp.Turnbased.BattleBasicConfig", function () { return {"att":1048841,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[0].Int32,$n[0].Int32],"pi":[{"n":"nEnemies","pt":$n[0].Int32,"ps":0},{"n":"nTurns","pt":$n[0].Int32,"ps":1}],"sn":"$ctor1"},{"a":2,"n":"nEnemies","t":4,"rt":$n[0].Int32,"sn":"nEnemies","ro":true,"box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"nTurns","t":4,"rt":$n[0].Int32,"sn":"nTurns","ro":true,"box":function ($v) { return Bridge.box($v, System.Int32);}}]}; });
    $m("Pidroh.ConsoleApp.Turnbased.Input", function () { return {"att":1048841,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[2].InputType,$n[0].Enum],"pi":[{"n":"type","pt":$n[2].InputType,"ps":0},{"n":"arg1","pt":$n[0].Enum,"ps":1}],"sn":"$ctor1"},{"a":2,"n":".ctor","t":1,"p":[$n[2].InputType,$n[0].Int32],"pi":[{"n":"type","pt":$n[2].InputType,"ps":0},{"n":"arg1","pt":$n[0].Int32,"ps":1}],"sn":"$ctor2"},{"a":2,"n":"arg1","t":4,"rt":$n[0].Int32,"sn":"arg1","ro":true,"box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"type","t":4,"rt":$n[2].InputType,"sn":"type","ro":true,"box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.InputType, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.InputType));}}]}; });
    $m("Pidroh.ConsoleApp.Turnbased.InputType", function () { return {"att":257,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"MiscBattle","is":true,"t":4,"rt":$n[2].InputType,"sn":"MiscBattle","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.InputType, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.InputType));}},{"a":2,"n":"Move","is":true,"t":4,"rt":$n[2].InputType,"sn":"Move","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.InputType, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.InputType));}}]}; });
    $m("Pidroh.ConsoleApp.Turnbased.MiscBattleInput", function () { return {"att":257,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Done","is":true,"t":4,"rt":$n[2].MiscBattleInput,"sn":"Done","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.MiscBattleInput, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.MiscBattleInput));}},{"a":2,"n":"Redo","is":true,"t":4,"rt":$n[2].MiscBattleInput,"sn":"Redo","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.MiscBattleInput, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.MiscBattleInput));}}]}; });
    $m("Pidroh.ConsoleApp.Turnbased.AsyncTasks", function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"}]}; });
    $m("Pidroh.ConsoleApp.Turnbased.AsyncTrack", function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"}]}; });
    $m("Pidroh.ConsoleApp.Turnbased.DelayedActions", function () { return {"att":1048705,"a":2,"m":[{"a":3,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":4,"n":"Add","t":8,"pi":[{"n":"time","pt":$n[0].Single,"ps":0}],"sn":"Add","rt":$n[0].Void,"p":[$n[0].Single]},{"a":4,"n":"EndTask","t":8,"pi":[{"n":"i","pt":$n[0].Int32,"ps":0}],"sn":"EndTask","rt":$n[0].Void,"p":[$n[0].Int32]},{"ab":true,"a":4,"n":"Execute","t":8,"pi":[{"n":"i","pt":$n[0].Int32,"ps":0}],"sn":"Execute","rt":$n[0].Void,"p":[$n[0].Int32]},{"a":2,"n":"IsDone","t":8,"sn":"IsDone","rt":$n[0].Boolean,"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"Update","t":8,"pi":[{"n":"delta","pt":$n[0].Single,"ps":0}],"sn":"Update","rt":$n[0].Void,"p":[$n[0].Single]},{"a":1,"n":"lists","t":4,"rt":$n[3].List$1(System.Collections.IList),"sn":"lists"},{"a":1,"n":"times","t":4,"rt":$n[3].List$1(System.Single),"sn":"times"}]}; });
    $m("Pidroh.ConsoleApp.Turnbased.AsyncTaskSetter$1", function (T) { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Add","t":8,"pi":[{"n":"e","pt":T,"ps":0},{"n":"setter","pt":Function,"ps":1},{"n":"time","pt":$n[0].Single,"ps":2}],"sn":"Add$1","rt":$n[0].Void,"p":[T,Function,$n[0].Single]},{"ov":true,"a":4,"n":"Execute","t":8,"pi":[{"n":"i","pt":$n[0].Int32,"ps":0}],"sn":"Execute","rt":$n[0].Void,"p":[$n[0].Int32]},{"a":1,"n":"ToValue","t":4,"rt":$n[3].List$1(T),"sn":"ToValue"},{"a":1,"n":"setters","t":4,"rt":$n[3].List$1(Function),"sn":"setters"}]}; });
    $m("Pidroh.ConsoleApp.Turnbased.BattleRender", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[2].TurnBaseTryValues],"pi":[{"n":"battleLogic","pt":$n[2].TurnBaseTryValues,"ps":0}],"sn":"ctor"},{"a":2,"n":"BattleEntityToScreenPosition","t":8,"pi":[{"n":"pos","pt":$n[1].Vector2D,"ps":0}],"sn":"BattleEntityToScreenPosition","rt":$n[1].Vector2D,"p":[$n[1].Vector2D]},{"a":2,"n":"Draw","t":8,"pi":[{"n":"delta","pt":$n[0].Single,"ps":0}],"sn":"Draw","rt":$n[0].Void,"p":[$n[0].Single]},{"a":1,"n":"DrawControls","t":8,"pi":[{"n":"y","pt":$n[0].Int32,"ps":0},{"n":"x","pt":$n[0].Int32,"ps":1}],"sn":"DrawControls","rt":$n[0].Void,"p":[$n[0].Int32,$n[0].Int32]},{"a":2,"n":"DrawGraphics","t":8,"pi":[{"n":"delta","pt":$n[0].Single,"ps":0}],"sn":"DrawGraphics","rt":$n[0].Void,"p":[$n[0].Single]},{"a":1,"n":"DrawLife","t":8,"pi":[{"n":"turnOrderX","pt":$n[0].Int32,"ps":0},{"n":"turnOrderY","pt":$n[0].Int32,"ps":1}],"sn":"DrawLife","rt":$n[0].Void,"p":[$n[0].Int32,$n[0].Int32]},{"a":1,"n":"DrawMove","t":8,"pi":[{"n":"move","pt":$n[2].TurnBaseTryValues.MoveType,"ps":0},{"n":"color","pt":$n[0].Int32,"ps":1}],"sn":"DrawMove","rt":$n[0].Void,"p":[$n[2].TurnBaseTryValues.MoveType,$n[0].Int32]},{"a":1,"n":"DrawMove","t":8,"pi":[{"n":"move","pt":$n[2].Value,"ps":0},{"n":"color","pt":$n[0].Int32,"ps":1}],"sn":"DrawMove$1","rt":$n[0].Void,"p":[$n[2].Value,$n[0].Int32]},{"a":1,"n":"DrawTurnOrder","t":8,"pi":[{"n":"turnOrderX","pt":$n[0].Int32,"ps":0},{"n":"turnOrderY","pt":$n[0].Int32,"ps":1}],"sn":"DrawTurnOrder","rt":$n[0].Void,"p":[$n[0].Int32,$n[0].Int32]},{"a":1,"n":"ElementToAuraColor","is":true,"t":8,"pi":[{"n":"element","pt":$n[2].TurnBaseTryValues.Element,"ps":0}],"sn":"ElementToAuraColor","rt":$n[0].Int32,"p":[$n[2].TurnBaseTryValues.Element],"box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"ElementToProjColor","is":true,"t":8,"pi":[{"n":"element","pt":$n[2].TurnBaseTryValues.Element,"ps":0}],"sn":"ElementToProjColor","rt":$n[0].Int32,"p":[$n[2].TurnBaseTryValues.Element],"box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"GetBoard","t":8,"sn":"GetBoard","rt":$n[1].TextBoard},{"a":2,"n":"GetChar","t":8,"pi":[{"n":"gameEntity","pt":$n[2].TurnBaseTryValues.BattleEntity,"ps":0}],"sn":"GetChar","rt":$n[0].Array.type(System.Char),"p":[$n[2].TurnBaseTryValues.BattleEntity]},{"a":1,"n":"GetCharOfMove","t":8,"pi":[{"n":"e","pt":$n[2].TurnBaseTryValues.BattleEntity,"ps":0},{"n":"i2","pt":$n[0].Int32,"ps":1}],"sn":"GetCharOfMove","rt":$n[0].String,"p":[$n[2].TurnBaseTryValues.BattleEntity,$n[0].Int32]},{"a":1,"n":"GetProjTextEntity","t":8,"pi":[{"n":"element","pt":$n[2].TurnBaseTryValues.Element,"ps":0}],"sn":"GetProjTextEntity","rt":$n[1].TextEntity,"p":[$n[2].TurnBaseTryValues.Element]},{"a":2,"n":"Input","t":16,"rt":$n[0].Int32,"g":{"a":2,"n":"get_Input","t":8,"rt":$n[0].Int32,"fg":"Input","box":function ($v) { return Bridge.box($v, System.Int32);}},"s":{"a":2,"n":"set_Input","t":8,"p":[$n[0].Int32],"rt":$n[0].Void,"fs":"Input"},"fn":"Input"},{"a":2,"n":"TextBoard","t":16,"rt":$n[1].TextBoard,"g":{"a":2,"n":"get_TextBoard","t":8,"rt":$n[1].TextBoard,"fg":"TextBoard"},"s":{"a":2,"n":"set_TextBoard","t":8,"p":[$n[1].TextBoard],"rt":$n[0].Void,"fs":"TextBoard"},"fn":"TextBoard"},{"a":1,"n":"battlerEntities","t":4,"rt":System.Array.type(Pidroh.TextRendering.TextEntity),"sn":"battlerEntities"},{"a":1,"n":"debugOn","t":4,"rt":$n[0].Boolean,"sn":"debugOn","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"entitiesChars","t":4,"rt":$n[0].Array.type(System.Array.type(System.Char)),"sn":"entitiesChars"},{"a":1,"n":"gridOffsetx","t":4,"rt":$n[0].Int32,"sn":"gridOffsetx","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"gridOffsety","t":4,"rt":$n[0].Int32,"sn":"gridOffsety","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"gridScale","t":4,"rt":$n[0].Int32,"sn":"gridScale","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"input","t":4,"rt":$n[0].Int32,"sn":"input","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"miscDescriptions","t":4,"rt":$n[3].Dictionary$2(Pidroh.ConsoleApp.Turnbased.MiscBattleInput,System.String),"sn":"miscDescriptions"},{"a":1,"n":"moveButtons","t":4,"rt":$n[3].Dictionary$2(Pidroh.ConsoleApp.Turnbased.Input,System.String),"sn":"moveButtons"},{"a":1,"n":"moveChars","t":4,"rt":$n[3].Dictionary$2(System.Object,System.String),"sn":"moveChars"},{"a":1,"n":"moveDescriptions","t":4,"rt":$n[3].Dictionary$2(System.Object,System.String),"sn":"moveDescriptions"},{"a":1,"n":"moveKeys","t":4,"rt":$n[3].Dictionary$2(Pidroh.ConsoleApp.Turnbased.Input,Pidroh.ConsoleApp.Turnbased.BattleRender.InputKey),"sn":"moveKeys"},{"a":1,"n":"posAnim","t":4,"rt":$n[1].PositionAnimation,"sn":"posAnim"},{"a":1,"n":"textWorld","t":4,"rt":$n[1].TextWorld,"sn":"textWorld"},{"a":1,"n":"turnBaseTry","t":4,"rt":$n[2].TurnBaseTryValues,"sn":"turnBaseTry"}]}; });
    $m("Pidroh.ConsoleApp.Turnbased.BattleRender.Colors", function () { return {"td":$n[2].BattleRender,"att":1048962,"a":2,"s":true,"m":[{"a":2,"n":"Board","is":true,"t":4,"rt":$n[0].Int32,"sn":"Board","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"Enemy","is":true,"t":4,"rt":$n[0].Int32,"sn":"Enemy","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"EnemyTurn","is":true,"t":4,"rt":$n[0].Int32,"sn":"EnemyTurn","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":4,"n":"FireAura","is":true,"t":4,"rt":$n[0].Int32,"sn":"FireAura","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":4,"n":"FireShot","is":true,"t":4,"rt":$n[0].Int32,"sn":"FireShot","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"GridEnemy","is":true,"t":4,"rt":$n[0].Int32,"sn":"GridEnemy","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"GridHero","is":true,"t":4,"rt":$n[0].Int32,"sn":"GridHero","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"Hero","is":true,"t":4,"rt":$n[0].Int32,"sn":"Hero","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"HeroTurn","is":true,"t":4,"rt":$n[0].Int32,"sn":"HeroTurn","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":4,"n":"IceAura","is":true,"t":4,"rt":$n[0].Int32,"sn":"IceAura","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":4,"n":"IceShot","is":true,"t":4,"rt":$n[0].Int32,"sn":"IceShot","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":4,"n":"ThunderAura","is":true,"t":4,"rt":$n[0].Int32,"sn":"ThunderAura","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":4,"n":"ThunderShot","is":true,"t":4,"rt":$n[0].Int32,"sn":"ThunderShot","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"WindowLabel","is":true,"t":4,"rt":$n[0].Int32,"sn":"WindowLabel","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"inputKey","is":true,"t":4,"rt":$n[0].Int32,"sn":"inputKey","box":function ($v) { return Bridge.box($v, System.Int32);}}]}; });
    $m("Pidroh.ConsoleApp.Turnbased.BattleRender.InputKey", function () { return {"td":$n[2].BattleRender,"att":258,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"DONE","is":true,"t":4,"rt":$n[2].BattleRender.InputKey,"sn":"DONE","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.BattleRender.InputKey, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.BattleRender.InputKey));}},{"a":2,"n":"DOWN","is":true,"t":4,"rt":$n[2].BattleRender.InputKey,"sn":"DOWN","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.BattleRender.InputKey, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.BattleRender.InputKey));}},{"a":2,"n":"FIRE","is":true,"t":4,"rt":$n[2].BattleRender.InputKey,"sn":"FIRE","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.BattleRender.InputKey, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.BattleRender.InputKey));}},{"a":2,"n":"ICE","is":true,"t":4,"rt":$n[2].BattleRender.InputKey,"sn":"ICE","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.BattleRender.InputKey, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.BattleRender.InputKey));}},{"a":2,"n":"LEFT","is":true,"t":4,"rt":$n[2].BattleRender.InputKey,"sn":"LEFT","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.BattleRender.InputKey, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.BattleRender.InputKey));}},{"a":2,"n":"NONE","is":true,"t":4,"rt":$n[2].BattleRender.InputKey,"sn":"NONE","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.BattleRender.InputKey, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.BattleRender.InputKey));}},{"a":2,"n":"NORMALSHOT","is":true,"t":4,"rt":$n[2].BattleRender.InputKey,"sn":"NORMALSHOT","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.BattleRender.InputKey, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.BattleRender.InputKey));}},{"a":2,"n":"REDO","is":true,"t":4,"rt":$n[2].BattleRender.InputKey,"sn":"REDO","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.BattleRender.InputKey, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.BattleRender.InputKey));}},{"a":2,"n":"RIGHT","is":true,"t":4,"rt":$n[2].BattleRender.InputKey,"sn":"RIGHT","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.BattleRender.InputKey, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.BattleRender.InputKey));}},{"a":2,"n":"THUNDER","is":true,"t":4,"rt":$n[2].BattleRender.InputKey,"sn":"THUNDER","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.BattleRender.InputKey, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.BattleRender.InputKey));}},{"a":2,"n":"UP","is":true,"t":4,"rt":$n[2].BattleRender.InputKey,"sn":"UP","box":function ($v) { return Bridge.box($v, Pidroh.ConsoleApp.Turnbased.BattleRender.InputKey, System.Enum.toStringFn(Pidroh.ConsoleApp.Turnbased.BattleRender.InputKey));}}]}; });
    $m("Pidroh.ConsoleApp.Turnbased.ColorStuff", function () { return {"att":1,"a":2,"m":[{"n":".cctor","t":1,"sn":"ctor","sm":true},{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":1,"n":"EvilMain","is":true,"t":4,"rt":$n[0].String,"sn":"EvilMain","ro":true},{"a":1,"n":"GoodMain","is":true,"t":4,"rt":$n[0].String,"sn":"GoodMain","ro":true},{"a":1,"n":"GoodSub","is":true,"t":4,"rt":$n[0].String,"sn":"GoodSub","ro":true},{"a":2,"n":"colors","is":true,"t":4,"rt":$n[0].Array.type(System.String),"sn":"colors"},{"a":2,"n":"neutralDark","is":true,"t":4,"rt":$n[0].String,"sn":"neutralDark"},{"a":2,"n":"neutralStrong","is":true,"t":4,"rt":$n[0].String,"sn":"neutralStrong"}]}; });
    $m("Pidroh.ConsoleApp.Turnbased.GameMain", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Draw","t":8,"pi":[{"n":"f","pt":$n[0].Single,"ps":0}],"sn":"Draw","rt":$n[0].Void,"p":[$n[0].Single]},{"a":2,"n":"GetBoard","t":8,"sn":"GetBoard","rt":$n[1].TextBoard},{"a":1,"n":"Reset","t":8,"sn":"Reset","rt":$n[0].Void},{"a":2,"n":"Input","t":16,"rt":$n[0].Int32,"g":{"a":2,"n":"get_Input","t":8,"rt":$n[0].Int32,"fg":"Input","box":function ($v) { return Bridge.box($v, System.Int32);}},"s":{"a":2,"n":"set_Input","t":8,"p":[$n[0].Int32],"rt":$n[0].Void,"fs":"Input"},"fn":"Input"},{"a":1,"n":"battleLogic","t":4,"rt":$n[2].TurnBaseTryValues,"sn":"battleLogic"},{"a":1,"n":"battleRender","t":4,"rt":$n[2].BattleRender,"sn":"battleRender"},{"a":1,"n":"difficulty","t":4,"rt":$n[0].Int32,"sn":"difficulty","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"enemyAmount","t":4,"rt":$n[0].Array.type(System.Int32),"sn":"enemyAmount"},{"a":1,"n":"mainDraw","t":4,"rt":$n[2].ITextScreen,"sn":"mainDraw"},{"a":1,"n":"modeSelectionScreen","t":4,"rt":$n[5].ModeSelectionScreen,"sn":"modeSelectionScreen"},{"a":1,"n":"resultScreen","t":4,"rt":$n[2].ResultScreen,"sn":"resultScreen"},{"a":1,"n":"turnAmount","t":4,"rt":$n[0].Array.type(System.Int32),"sn":"turnAmount"}]}; });
    $m("Pidroh.ConsoleApp.Turnbased.ITextScreen", function () { return {"att":160,"a":4,"m":[{"ab":true,"a":2,"n":"Draw","t":8,"pi":[{"n":"f","pt":$n[0].Single,"ps":0}],"sn":"Pidroh$ConsoleApp$Turnbased$ITextScreen$Draw","rt":$n[0].Void,"p":[$n[0].Single]},{"ab":true,"a":2,"n":"GetBoard","t":8,"sn":"Pidroh$ConsoleApp$Turnbased$ITextScreen$GetBoard","rt":$n[1].TextBoard},{"ab":true,"a":2,"n":"Input","t":16,"rt":$n[0].Int32,"s":{"ab":true,"a":2,"n":"set_Input","t":8,"p":[$n[0].Int32],"rt":$n[0].Void,"fs":"Pidroh$ConsoleApp$Turnbased$ITextScreen$Input"},"fn":"Pidroh$ConsoleApp$Turnbased$ITextScreen$Input"}]}; });
    $m("Pidroh.ConsoleApp.Turnbased.ResultScreen", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Draw","t":8,"pi":[{"n":"f","pt":$n[0].Single,"ps":0}],"sn":"Draw","rt":$n[0].Void,"p":[$n[0].Single]},{"a":2,"n":"Enter","t":8,"sn":"Enter","rt":$n[0].Void},{"a":2,"n":"GetBoard","t":8,"sn":"GetBoard","rt":$n[1].TextBoard},{"a":2,"n":"Input","t":16,"rt":$n[0].Int32,"g":{"a":2,"n":"get_Input","t":8,"rt":$n[0].Int32,"fg":"Input","box":function ($v) { return Bridge.box($v, System.Int32);}},"s":{"a":2,"n":"set_Input","t":8,"p":[$n[0].Int32],"rt":$n[0].Void,"fs":"Input"},"fn":"Input"},{"a":2,"n":"battleResult","t":4,"rt":$n[2].BattleResult,"sn":"battleResult"},{"a":1,"n":"textWorld","t":4,"rt":$n[1].TextWorld,"sn":"textWorld"},{"a":2,"n":"wannaLeave","t":4,"rt":$n[0].Int32,"sn":"wannaLeave","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"youLose","t":4,"rt":$n[0].String,"sn":"youLose"},{"a":1,"n":"youWin","t":4,"rt":$n[0].String,"sn":"youWin"}]}; });
    $m("Pidroh.ConsoleApp.Turnbased.Happs.HappManager", function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Add","t":8,"pi":[{"n":"h","pt":$n[4].Happ,"ps":0}],"sn":"Add","rt":$n[4].Happ,"p":[$n[4].Happ]},{"a":2,"n":"AddHandler","t":8,"pi":[{"n":"hh","pt":$n[4].HappHandler,"ps":0}],"sn":"AddHandler","rt":$n[0].Void,"p":[$n[4].HappHandler]},{"a":1,"n":"Handle","t":8,"sn":"Handle","rt":$n[0].Void},{"a":2,"n":"Tick","t":8,"sn":"Tick","rt":$n[0].Void},{"a":2,"n":"TryHandle","t":8,"sn":"TryHandle","rt":$n[0].Void},{"a":2,"n":"CurrentTime","t":16,"rt":$n[0].Int32,"g":{"a":2,"n":"get_CurrentTime","t":8,"rt":$n[0].Int32,"fg":"CurrentTime","box":function ($v) { return Bridge.box($v, System.Int32);}},"s":{"a":1,"n":"set_CurrentTime","t":8,"p":[$n[0].Int32],"rt":$n[0].Void,"fs":"CurrentTime"},"fn":"CurrentTime"},{"a":1,"n":"Happs","t":4,"rt":$n[3].List$1(Pidroh.ConsoleApp.Turnbased.Happs.Happ),"sn":"Happs"},{"a":1,"n":"handlers","t":4,"rt":$n[3].List$1(Pidroh.ConsoleApp.Turnbased.Happs.HappHandler),"sn":"handlers"},{"a":1,"n":"latestHandled","t":4,"rt":$n[0].Int32,"sn":"latestHandled","box":function ($v) { return Bridge.box($v, System.Int32);}}]}; });
    $m("Pidroh.ConsoleApp.Turnbased.Happs.Happ", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[0].Object],"pi":[{"n":"mainTag","pt":$n[0].Object,"ps":0}],"sn":"ctor"},{"a":2,"n":"AddAttribute","t":8,"pi":[{"n":"a","pt":$n[4].Happ.Attribute,"ps":0}],"sn":"AddAttribute","rt":$n[4].Happ,"p":[$n[4].Happ.Attribute]},{"a":4,"n":"GetAttribute_Int","t":8,"pi":[{"n":"index","pt":$n[0].Int32,"ps":0}],"sn":"GetAttribute_Int","rt":$n[0].Int32,"p":[$n[0].Int32],"box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"MainTag","t":4,"rt":$n[0].String,"sn":"MainTag"},{"a":2,"n":"TimeStamp","t":4,"rt":$n[0].Int32,"sn":"TimeStamp","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"attrs","t":4,"rt":$n[3].List$1(Pidroh.ConsoleApp.Turnbased.Happs.Happ.Attribute),"sn":"attrs"}]}; });
    $m("Pidroh.ConsoleApp.Turnbased.Happs.Happ.Attribute", function () { return {"td":$n[4].Happ,"att":1048578,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"SetValue","t":8,"pi":[{"n":"f","pt":$n[0].Single,"ps":0}],"sn":"SetValue","rt":$n[4].Happ.Attribute,"p":[$n[0].Single]},{"a":2,"n":"Value","t":16,"rt":$n[0].Single,"g":{"a":2,"n":"get_Value","t":8,"rt":$n[0].Single,"fg":"Value","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},"s":{"a":1,"n":"set_Value","t":8,"p":[$n[0].Single],"rt":$n[0].Void,"fs":"Value"},"fn":"Value"},{"a":2,"n":"tags","t":4,"rt":$n[4].TagHolder,"sn":"tags"}]}; });
    $m("Pidroh.ConsoleApp.Turnbased.Happs.HappHandler", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[0].Object,Function],"pi":[{"n":"mainTag","pt":$n[0].Object,"ps":0},{"n":"handle","pt":Function,"ps":1}],"sn":"ctor"},{"a":2,"n":"Handle","t":4,"rt":Function,"sn":"Handle"},{"a":2,"n":"mainTag","t":4,"rt":$n[0].String,"sn":"mainTag"}]}; });
    $m("Pidroh.ConsoleApp.Turnbased.Happs.TagHolder", function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":4,"n":"Add","t":8,"pi":[{"n":"v","pt":$n[0].Object,"ps":0}],"sn":"Add","rt":$n[0].Void,"p":[$n[0].Object]},{"a":2,"n":"HasTag","t":8,"pi":[{"n":"t","pt":$n[0].Object,"ps":0}],"sn":"HasTag","rt":$n[0].Boolean,"p":[$n[0].Object],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"Tags","t":16,"rt":$n[3].List$1(System.Object),"g":{"a":2,"n":"get_Tags","t":8,"rt":$n[3].List$1(System.Object),"fg":"Tags"},"fn":"Tags"},{"a":1,"n":"__Property__Initializer__Tags","t":4,"rt":$n[3].List$1(System.Object),"sn":"__Property__Initializer__Tags"}]}; });
    $m("Pidroh.ConsoleApp.Turnbased.DebugExtra.DebugEx", function () { return {"att":1048961,"a":2,"s":true,"m":[{"a":2,"n":"Log","is":true,"t":8,"pi":[{"n":"v","pt":$n[0].String,"ps":0}],"sn":"Log","rt":$n[0].Void,"p":[$n[0].String]},{"a":2,"n":"Show","is":true,"t":8,"sn":"Show","rt":$n[0].Void},{"a":1,"n":"messages","is":true,"t":4,"rt":$n[3].List$1(System.String),"sn":"messages"}]}; });
    $m("Pidroh.TextRendering.CharByCharAnimation", function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"ov":true,"a":2,"n":"Modify","t":8,"pi":[{"n":"entity","pt":$n[1].TextEntity,"ps":0},{"n":"mainData","pt":$n[1].CharByCharAnimation.CharByCharData,"ps":1},{"n":"progress","pt":$n[0].Single,"ps":2},{"n":"length","pt":$n[0].Single,"ps":3}],"sn":"Modify$2","rt":$n[0].Void,"p":[$n[1].TextEntity,$n[1].CharByCharAnimation.CharByCharData,$n[0].Single,$n[0].Single]}]}; });
    $m("Pidroh.TextRendering.CharByCharAnimation.CharByCharData", function () { return {"td":$n[1].CharByCharAnimation,"att":1048578,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[0].Int32,$n[0].Int32],"pi":[{"n":"charStart","pt":$n[0].Int32,"ps":0},{"n":"charEnd","pt":$n[0].Int32,"ps":1}],"sn":"ctor"},{"a":4,"n":"charEnd","t":4,"rt":$n[0].Int32,"sn":"charEnd","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":4,"n":"charStart","t":4,"rt":$n[0].Int32,"sn":"charStart","box":function ($v) { return Bridge.box($v, System.Int32);}}]}; });
    $m("Pidroh.TextRendering.BlinkAnim", function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"ov":true,"a":2,"n":"Modify","t":8,"pi":[{"n":"entity","pt":$n[1].TextEntity,"ps":0},{"n":"mainData","pt":$n[1].BlinkAnim.BlinkData,"ps":1},{"n":"progress","pt":$n[0].Single,"ps":2},{"n":"length","pt":$n[0].Single,"ps":3}],"sn":"Modify$2","rt":$n[0].Void,"p":[$n[1].TextEntity,$n[1].BlinkAnim.BlinkData,$n[0].Single,$n[0].Single]}]}; });
    $m("Pidroh.TextRendering.BlinkAnim.BlinkData", function () { return {"td":$n[1].BlinkAnim,"att":1048842,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[0].Char,$n[0].Int32,$n[0].Int32,$n[0].Single,$n[0].Single],"pi":[{"n":"text","pt":$n[0].Char,"ps":0},{"n":"backColor","pt":$n[0].Int32,"ps":1},{"n":"textColor","pt":$n[0].Int32,"ps":2},{"n":"blinkActiveTime","pt":$n[0].Single,"ps":3},{"n":"blinkInactive","pt":$n[0].Single,"ps":4}],"sn":"$ctor1"},{"a":2,"n":"BackColor","is":true,"t":8,"pi":[{"n":"backColor","pt":$n[0].Int32,"ps":0},{"n":"blinkDuration","pt":$n[0].Single,"ps":1}],"sn":"BackColor","rt":$n[1].BlinkAnim.BlinkData,"p":[$n[0].Int32,$n[0].Single]},{"a":2,"n":"Char","is":true,"t":8,"pi":[{"n":"c","pt":$n[0].Char,"ps":0},{"n":"blinkDuration","pt":$n[0].Single,"ps":1}],"sn":"Char","rt":$n[1].BlinkAnim.BlinkData,"p":[$n[0].Char,$n[0].Single]},{"a":2,"n":"backColor","t":4,"rt":$n[0].Int32,"sn":"backColor","ro":true,"box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"blinkActiveTime","t":4,"rt":$n[0].Single,"sn":"blinkActiveTime","ro":true,"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"blinkInactive","t":4,"rt":$n[0].Single,"sn":"blinkInactive","ro":true,"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"text","t":4,"rt":$n[0].Char,"sn":"text","ro":true,"box":function ($v) { return Bridge.box($v, System.Char, String.fromCharCode, System.Char.getHashCode);}},{"a":2,"n":"textColor","t":4,"rt":$n[0].Int32,"sn":"textColor","ro":true,"box":function ($v) { return Bridge.box($v, System.Int32);}}]}; });
    $m("Pidroh.TextRendering.TextBoard", function () { return {"att":1048577,"a":2,"m":[{"a":2,"n":".ctor","t":1,"p":[$n[0].Int32,$n[0].Int32],"pi":[{"n":"width","pt":$n[0].Int32,"ps":0},{"n":"height","pt":$n[0].Int32,"ps":1}],"sn":"ctor"},{"a":1,"n":"AdvanceCursor","t":8,"sn":"AdvanceCursor","rt":$n[0].Void},{"a":2,"n":"CharAt","t":8,"pi":[{"n":"i","pt":$n[0].Int32,"ps":0},{"n":"j","pt":$n[0].Int32,"ps":1}],"sn":"CharAt","rt":$n[0].Char,"p":[$n[0].Int32,$n[0].Int32],"box":function ($v) { return Bridge.box($v, System.Char, String.fromCharCode, System.Char.getHashCode);}},{"a":2,"n":"CursorNewLine","t":8,"pi":[{"n":"x","pt":$n[0].Int32,"ps":0}],"sn":"CursorNewLine","rt":$n[0].Void,"p":[$n[0].Int32]},{"a":2,"n":"Draw","t":8,"pi":[{"n":"v","pt":$n[0].String,"ps":0},{"n":"x2","pt":$n[0].Int32,"ps":1},{"n":"y2","pt":$n[0].Int32,"ps":2},{"n":"input","pt":$n[0].Object,"ps":3}],"sn":"Draw$2","rt":$n[0].Void,"p":[$n[0].String,$n[0].Int32,$n[0].Int32,$n[0].Object]},{"a":2,"n":"Draw","t":8,"pi":[{"n":"v","pt":$n[3].IEnumerable$1(System.Char),"ps":0},{"n":"x","pt":$n[0].Int32,"ps":1},{"n":"y","pt":$n[0].Int32,"ps":2},{"n":"color","pt":$n[0].Int32,"ps":3},{"n":"backColor","dv":-2,"o":true,"pt":$n[0].Int32,"ps":4}],"sn":"Draw","rt":$n[0].Void,"p":[$n[3].IEnumerable$1(System.Char),$n[0].Int32,$n[0].Int32,$n[0].Int32,$n[0].Int32]},{"a":2,"n":"Draw","t":8,"pi":[{"n":"v","pt":$n[0].String,"ps":0},{"n":"x","pt":$n[0].Int32,"ps":1},{"n":"y","pt":$n[0].Int32,"ps":2},{"n":"color","pt":$n[0].Int32,"ps":3},{"n":"backColor","dv":-2,"o":true,"pt":$n[0].Int32,"ps":4}],"sn":"Draw$1","rt":$n[0].Void,"p":[$n[0].String,$n[0].Int32,$n[0].Int32,$n[0].Int32,$n[0].Int32]},{"a":2,"n":"DrawChar","t":8,"pi":[{"n":"v","pt":$n[0].Char,"ps":0},{"n":"x","pt":$n[0].Int32,"ps":1},{"n":"y","pt":$n[0].Int32,"ps":2}],"sn":"DrawChar","rt":$n[0].Void,"p":[$n[0].Char,$n[0].Int32,$n[0].Int32]},{"a":2,"n":"DrawChar","t":8,"pi":[{"n":"v","pt":$n[0].Char,"ps":0},{"n":"x","pt":$n[0].Int32,"ps":1},{"n":"y","pt":$n[0].Int32,"ps":2},{"n":"color","pt":$n[0].Int32,"ps":3},{"n":"backColor","dv":-2,"o":true,"pt":$n[0].Int32,"ps":4}],"sn":"DrawChar$1","rt":$n[0].Void,"p":[$n[0].Char,$n[0].Int32,$n[0].Int32,$n[0].Int32,$n[0].Int32]},{"a":2,"n":"DrawGrid","t":8,"pi":[{"n":"x","pt":$n[0].Int32,"ps":0},{"n":"y","pt":$n[0].Int32,"ps":1},{"n":"width","pt":$n[0].Int32,"ps":2},{"n":"height","pt":$n[0].Int32,"ps":3},{"n":"color","pt":$n[0].Int32,"ps":4}],"sn":"DrawGrid","rt":$n[0].Void,"p":[$n[0].Int32,$n[0].Int32,$n[0].Int32,$n[0].Int32,$n[0].Int32]},{"a":2,"n":"DrawGrid","t":8,"pi":[{"n":"v1","pt":$n[0].Int32,"ps":0},{"n":"v2","pt":$n[0].Int32,"ps":1},{"n":"v3","pt":$n[0].Int32,"ps":2},{"n":"v4","pt":$n[0].Int32,"ps":3},{"n":"board","pt":$n[0].Object,"ps":4}],"sn":"DrawGrid$1","rt":$n[0].Void,"p":[$n[0].Int32,$n[0].Int32,$n[0].Int32,$n[0].Int32,$n[0].Object]},{"a":2,"n":"DrawOnCenter","t":8,"pi":[{"n":"message","pt":$n[0].String,"ps":0},{"n":"color","pt":$n[0].Int32,"ps":1},{"n":"xOff","dv":0,"o":true,"pt":$n[0].Int32,"ps":2},{"n":"yOff","dv":0,"o":true,"pt":$n[0].Int32,"ps":3},{"n":"alignString","dv":true,"o":true,"pt":$n[0].Boolean,"ps":4}],"sn":"DrawOnCenter","rt":$n[0].Void,"p":[$n[0].String,$n[0].Int32,$n[0].Int32,$n[0].Int32,$n[0].Boolean]},{"a":2,"n":"DrawOneDigit","t":8,"pi":[{"n":"i","pt":$n[0].Int32,"ps":0},{"n":"x","pt":$n[0].Int32,"ps":1},{"n":"y","pt":$n[0].Int32,"ps":2},{"n":"color","dv":-2,"o":true,"pt":$n[0].Int32,"ps":3}],"sn":"DrawOneDigit","rt":$n[0].Void,"p":[$n[0].Int32,$n[0].Int32,$n[0].Int32,$n[0].Int32]},{"a":2,"n":"DrawOneDigit_Cursor","t":8,"pi":[{"n":"i","pt":$n[0].Int32,"ps":0}],"sn":"DrawOneDigit_Cursor","rt":$n[0].Void,"p":[$n[0].Int32]},{"a":2,"n":"DrawRepeated","t":8,"pi":[{"n":"c","pt":$n[0].Char,"ps":0},{"n":"x","pt":$n[0].Int32,"ps":1},{"n":"y","pt":$n[0].Int32,"ps":2},{"n":"width","pt":$n[0].Int32,"ps":3},{"n":"height","pt":$n[0].Int32,"ps":4},{"n":"color","pt":$n[0].Int32,"ps":5},{"n":"backColor","dv":-2,"o":true,"pt":$n[0].Int32,"ps":6}],"sn":"DrawRepeated","rt":$n[0].Void,"p":[$n[0].Char,$n[0].Int32,$n[0].Int32,$n[0].Int32,$n[0].Int32,$n[0].Int32,$n[0].Int32]},{"a":2,"n":"DrawWithGrid","t":8,"pi":[{"n":"text","pt":$n[0].String,"ps":0},{"n":"x","pt":$n[0].Int32,"ps":1},{"n":"y","pt":$n[0].Int32,"ps":2},{"n":"gridColor","pt":$n[0].Int32,"ps":3},{"n":"textColor","pt":$n[0].Int32,"ps":4}],"sn":"DrawWithGrid","rt":$n[0].Void,"p":[$n[0].String,$n[0].Int32,$n[0].Int32,$n[0].Int32,$n[0].Int32]},{"a":2,"n":"Draw_Cursor","t":8,"pi":[{"n":"c","pt":$n[0].Char,"ps":0}],"sn":"Draw_Cursor","rt":$n[0].Void,"p":[$n[0].Char]},{"a":2,"n":"Draw_Cursor","t":8,"pi":[{"n":"v","pt":$n[0].String,"ps":0}],"sn":"Draw_Cursor$2","rt":$n[0].Void,"p":[$n[0].String]},{"a":2,"n":"Draw_Cursor","t":8,"pi":[{"n":"c","pt":$n[0].Char,"ps":0},{"n":"color","pt":$n[0].Int32,"ps":1}],"sn":"Draw_Cursor$1","rt":$n[0].Void,"p":[$n[0].Char,$n[0].Int32]},{"a":2,"n":"Draw_Cursor","t":8,"pi":[{"n":"v","pt":$n[0].String,"ps":0},{"n":"color","pt":$n[0].Int32,"ps":1}],"sn":"Draw_Cursor$3","rt":$n[0].Void,"p":[$n[0].String,$n[0].Int32]},{"a":2,"n":"Insert","t":8,"pi":[{"n":"secondBoard","pt":$n[1].TextBoard,"ps":0}],"sn":"Insert","rt":$n[0].Void,"p":[$n[1].TextBoard]},{"a":2,"n":"Reset","t":8,"sn":"Reset","rt":$n[0].Void},{"a":2,"n":"ResetInvisible","t":8,"sn":"ResetInvisible","rt":$n[0].Void},{"a":4,"n":"Resize","t":8,"pi":[{"n":"w","pt":$n[0].Int32,"ps":0},{"n":"h","pt":$n[0].Int32,"ps":1}],"sn":"Resize","rt":$n[0].Void,"p":[$n[0].Int32,$n[0].Int32]},{"a":4,"n":"Set","t":8,"pi":[{"n":"origin","pt":$n[1].TextBoard,"ps":0}],"sn":"Set","rt":$n[0].Void,"p":[$n[1].TextBoard]},{"a":4,"n":"SetAll","t":8,"pi":[{"n":"text","pt":$n[0].Char,"ps":0},{"n":"textColor","pt":$n[0].Int32,"ps":1},{"n":"backColor","pt":$n[0].Int32,"ps":2}],"sn":"SetAll","rt":$n[0].Void,"p":[$n[0].Char,$n[0].Int32,$n[0].Int32]},{"a":2,"n":"SetBackColor","t":8,"pi":[{"n":"color","pt":$n[0].Int32,"ps":0},{"n":"x","pt":$n[0].Int32,"ps":1},{"n":"y","pt":$n[0].Int32,"ps":2}],"sn":"SetBackColor","rt":$n[0].Void,"p":[$n[0].Int32,$n[0].Int32,$n[0].Int32]},{"a":2,"n":"SetColor","t":8,"pi":[{"n":"color","pt":$n[0].Int32,"ps":0},{"n":"x","pt":$n[0].Int32,"ps":1},{"n":"y","pt":$n[0].Int32,"ps":2}],"sn":"SetColor","rt":$n[0].Void,"p":[$n[0].Int32,$n[0].Int32,$n[0].Int32]},{"a":2,"n":"SetCursorAt","t":8,"pi":[{"n":"x","pt":$n[0].Int32,"ps":0},{"n":"y","pt":$n[0].Int32,"ps":1}],"sn":"SetCursorAt","rt":$n[0].Void,"p":[$n[0].Int32,$n[0].Int32]},{"a":1,"n":"SetMaxSize","t":8,"pi":[{"n":"width","pt":$n[0].Int32,"ps":0},{"n":"height","pt":$n[0].Int32,"ps":1}],"sn":"SetMaxSize","rt":$n[0].Void,"p":[$n[0].Int32,$n[0].Int32]},{"a":2,"n":"BackColor","t":16,"rt":$n[0].Array.type(System.Int32, 2),"g":{"a":2,"n":"get_BackColor","t":8,"rt":$n[0].Array.type(System.Int32, 2),"fg":"BackColor"},"s":{"a":1,"n":"set_BackColor","t":8,"p":[$n[0].Array.type(System.Int32, 2)],"rt":$n[0].Void,"fs":"BackColor"},"fn":"BackColor"},{"a":2,"n":"CursorX","t":16,"rt":$n[0].Int32,"g":{"a":2,"n":"get_CursorX","t":8,"rt":$n[0].Int32,"fg":"CursorX","box":function ($v) { return Bridge.box($v, System.Int32);}},"s":{"a":2,"n":"set_CursorX","t":8,"p":[$n[0].Int32],"rt":$n[0].Void,"fs":"CursorX"},"fn":"CursorX"},{"a":2,"n":"CursorY","t":16,"rt":$n[0].Int32,"g":{"a":2,"n":"get_CursorY","t":8,"rt":$n[0].Int32,"fg":"CursorY","box":function ($v) { return Bridge.box($v, System.Int32);}},"s":{"a":2,"n":"set_CursorY","t":8,"p":[$n[0].Int32],"rt":$n[0].Void,"fs":"CursorY"},"fn":"CursorY"},{"a":2,"n":"Height","t":16,"rt":$n[0].Int32,"g":{"a":2,"n":"get_Height","t":8,"rt":$n[0].Int32,"fg":"Height","box":function ($v) { return Bridge.box($v, System.Int32);}},"s":{"a":1,"n":"set_Height","t":8,"p":[$n[0].Int32],"rt":$n[0].Void,"fs":"Height"},"fn":"Height"},{"a":2,"n":"Position","t":16,"rt":$n[1].Vector2D,"g":{"a":2,"n":"get_Position","t":8,"rt":$n[1].Vector2D,"fg":"Position"},"s":{"a":2,"n":"set_Position","t":8,"p":[$n[1].Vector2D],"rt":$n[0].Void,"fs":"Position"},"fn":"Position"},{"a":2,"n":"TextColor","t":16,"rt":$n[0].Array.type(System.Int32, 2),"g":{"a":2,"n":"get_TextColor","t":8,"rt":$n[0].Array.type(System.Int32, 2),"fg":"TextColor"},"s":{"a":1,"n":"set_TextColor","t":8,"p":[$n[0].Array.type(System.Int32, 2)],"rt":$n[0].Void,"fs":"TextColor"},"fn":"TextColor"},{"a":2,"n":"Width","t":16,"rt":$n[0].Int32,"g":{"a":2,"n":"get_Width","t":8,"rt":$n[0].Int32,"fg":"Width","box":function ($v) { return Bridge.box($v, System.Int32);}},"s":{"a":1,"n":"set_Width","t":8,"p":[$n[0].Int32],"rt":$n[0].Void,"fs":"Width"},"fn":"Width"},{"a":2,"n":"INVISIBLECHAR","is":true,"t":4,"rt":$n[0].Char,"sn":"INVISIBLECHAR","box":function ($v) { return Bridge.box($v, System.Char, String.fromCharCode, System.Char.getHashCode);}},{"a":2,"n":"INVISIBLECOLOR","is":true,"t":4,"rt":$n[0].Int32,"sn":"INVISIBLECOLOR","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"NOCHANGECHAR","is":true,"t":4,"rt":$n[0].Char,"sn":"NOCHANGECHAR","box":function ($v) { return Bridge.box($v, System.Char, String.fromCharCode, System.Char.getHashCode);}},{"a":2,"n":"NOCHANGECOLOR","is":true,"t":4,"rt":$n[0].Int32,"sn":"NOCHANGECOLOR","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"chars","t":4,"rt":$n[0].Array.type(System.Char, 2),"sn":"chars"},{"a":1,"n":"cursorX","t":4,"rt":$n[0].Int32,"sn":"cursorX","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"cursorY","t":4,"rt":$n[0].Int32,"sn":"cursorY","box":function ($v) { return Bridge.box($v, System.Int32);}}]}; });
    $m("Pidroh.TextRendering.TextWorld", function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"AddAnimation","t":8,"pi":[{"n":"ta","pt":System.Object,"ps":0}],"tpc":1,"tprm":["T"],"sn":"AddAnimation","rt":System.Object,"p":[System.Object]},{"a":2,"n":"AdvanceTime","t":8,"pi":[{"n":"v","pt":$n[0].Single,"ps":0}],"sn":"AdvanceTime","rt":$n[0].Void,"p":[$n[0].Single]},{"a":2,"n":"Draw","t":8,"sn":"Draw","rt":$n[0].Void},{"a":2,"n":"DrawChildren","t":8,"sn":"DrawChildren","rt":$n[0].Void},{"a":2,"n":"GetFreeEntity","t":8,"pi":[{"n":"w","pt":$n[0].Int32,"ps":0},{"n":"h","pt":$n[0].Int32,"ps":1}],"sn":"GetFreeEntity","rt":$n[1].TextEntity,"p":[$n[0].Int32,$n[0].Int32]},{"a":2,"n":"GetTempEntity","t":8,"pi":[{"n":"w","pt":$n[0].Int32,"ps":0},{"n":"h","pt":$n[0].Int32,"ps":1}],"sn":"GetTempEntity","rt":$n[1].TextEntity,"p":[$n[0].Int32,$n[0].Int32]},{"a":2,"n":"Init","t":8,"pi":[{"n":"width","pt":$n[0].Int32,"ps":0},{"n":"height","pt":$n[0].Int32,"ps":1}],"sn":"Init","rt":$n[0].Void,"p":[$n[0].Int32,$n[0].Int32]},{"a":2,"n":"IsDone","t":8,"sn":"IsDone","rt":$n[0].Boolean,"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"activeAgents","t":4,"rt":$n[3].List$1(Pidroh.TextRendering.TextEntity),"sn":"activeAgents"},{"a":1,"n":"animations","t":4,"rt":$n[3].List$1(Pidroh.TextRendering.TextAnimation),"sn":"animations"},{"a":1,"n":"freeBoards","t":4,"rt":$n[3].List$1(Pidroh.TextRendering.TextEntity),"sn":"freeBoards"},{"a":1,"n":"latestId","t":4,"rt":$n[0].Int32,"sn":"latestId","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"mainBoard","t":4,"rt":$n[1].TextBoard,"sn":"mainBoard"}]}; });
    $m("Pidroh.TextRendering.TextEntity", function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"AnimBase","t":8,"pi":[{"n":"length","pt":$n[0].Single,"ps":0}],"sn":"AnimBase","rt":$n[1].TextAnimation.BaseData,"p":[$n[0].Single]},{"a":4,"n":"ResetAnimation","t":8,"sn":"ResetAnimation","rt":$n[0].Void},{"a":4,"n":"ResetFull","t":8,"sn":"ResetFull","rt":$n[0].Void},{"a":4,"n":"SetSize","t":8,"pi":[{"n":"w","pt":$n[0].Int32,"ps":0},{"n":"h","pt":$n[0].Int32,"ps":1}],"sn":"SetSize","rt":$n[0].Void,"p":[$n[0].Int32,$n[0].Int32]},{"a":4,"n":"animating","t":4,"rt":$n[0].Boolean,"sn":"animating","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"animation","t":4,"rt":$n[1].TextBoard,"sn":"animation"},{"a":2,"n":"freeIfIdle","t":4,"rt":$n[0].Boolean,"sn":"freeIfIdle","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"id","t":4,"rt":$n[0].Int32,"sn":"id","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"origin","t":4,"rt":$n[1].TextBoard,"sn":"origin"}]}; });
    $m("Pidroh.TextRendering.PositionAnimation", function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"ov":true,"a":2,"n":"Modify","t":8,"pi":[{"n":"entity","pt":$n[1].TextEntity,"ps":0},{"n":"mainData","pt":$n[1].PositionAnimation.PositionData,"ps":1},{"n":"progress","pt":$n[0].Single,"ps":2},{"n":"length","pt":$n[0].Single,"ps":3}],"sn":"Modify$2","rt":$n[0].Void,"p":[$n[1].TextEntity,$n[1].PositionAnimation.PositionData,$n[0].Single,$n[0].Single]}]}; });
    $m("Pidroh.TextRendering.PositionAnimation.PositionData", function () { return {"td":$n[1].PositionAnimation,"att":1048842,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[1].Vector2D,$n[1].Vector2D,$n[0].Boolean],"pi":[{"n":"startPosition","pt":$n[1].Vector2D,"ps":0},{"n":"endPosition","pt":$n[1].Vector2D,"ps":1},{"n":"perm","dv":false,"o":true,"pt":$n[0].Boolean,"ps":2}],"sn":"$ctor1"},{"a":2,"n":"endPosition","t":4,"rt":$n[1].Vector2D,"sn":"endPosition","ro":true},{"a":2,"n":"permanent","t":4,"rt":$n[0].Boolean,"sn":"permanent","ro":true,"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"startPosition","t":4,"rt":$n[1].Vector2D,"sn":"startPosition","ro":true}]}; });
    $m("Pidroh.TextRendering.TextAnimation$1", function (T) { return {"att":1048705,"a":2,"m":[{"a":3,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Add","t":8,"pi":[{"n":"baseData","pt":$n[1].TextAnimation.BaseData,"ps":0},{"n":"mainD","pt":T,"ps":1}],"sn":"Add$1","rt":$n[0].Void,"p":[$n[1].TextAnimation.BaseData,T]},{"ov":true,"a":2,"n":"Modify","t":8,"pi":[{"n":"entity","pt":$n[1].TextEntity,"ps":0},{"n":"index","pt":$n[0].Int32,"ps":1},{"n":"progress","pt":$n[0].Single,"ps":2},{"n":"length","pt":$n[0].Single,"ps":3}],"sn":"Modify","rt":$n[0].Void,"p":[$n[1].TextEntity,$n[0].Int32,$n[0].Single,$n[0].Single]},{"v":true,"a":2,"n":"Modify","t":8,"pi":[{"n":"entity","pt":$n[1].TextEntity,"ps":0},{"n":"mainData","pt":T,"ps":1},{"n":"progress","pt":$n[0].Single,"ps":2},{"n":"length","pt":$n[0].Single,"ps":3}],"sn":"Modify$2","rt":$n[0].Void,"p":[$n[1].TextEntity,T,$n[0].Single,$n[0].Single]},{"ov":true,"a":3,"n":"RequestRegisterLists","t":8,"sn":"RequestRegisterLists","rt":$n[0].Void},{"a":3,"n":"mainData","t":4,"rt":$n[3].List$1(T),"sn":"mainData"}]}; });
    $m("Pidroh.TextRendering.TextAnimation", function () { return {"att":1048705,"a":2,"m":[{"a":3,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":4,"n":"Add","t":8,"pi":[{"n":"bd","pt":$n[1].TextAnimation.BaseData,"ps":0}],"sn":"Add","rt":$n[0].Void,"p":[$n[1].TextAnimation.BaseData]},{"a":4,"n":"EndTask","t":8,"pi":[{"n":"i","pt":$n[0].Int32,"ps":0}],"sn":"EndTask","rt":$n[0].Void,"p":[$n[0].Int32]},{"a":2,"n":"IsDone","t":8,"sn":"IsDone","rt":$n[0].Boolean,"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":4,"n":"Modify","t":8,"pi":[{"n":"a","pt":$n[1].TextEntity,"ps":0}],"sn":"Modify$1","rt":$n[0].Void,"p":[$n[1].TextEntity]},{"v":true,"a":2,"n":"Modify","t":8,"pi":[{"n":"entity","pt":$n[1].TextEntity,"ps":0},{"n":"index","pt":$n[0].Int32,"ps":1},{"n":"progress","pt":$n[0].Single,"ps":2},{"n":"length","pt":$n[0].Single,"ps":3}],"sn":"Modify","rt":$n[0].Void,"p":[$n[1].TextEntity,$n[0].Int32,$n[0].Single,$n[0].Single]},{"a":4,"n":"RegisterList","t":8,"pi":[{"n":"mainData","pt":$n[6].IList,"ps":0}],"sn":"RegisterList","rt":$n[0].Void,"p":[$n[6].IList]},{"a":2,"n":"RegisterLists","t":8,"sn":"RegisterLists","rt":$n[0].Void},{"ab":true,"a":3,"n":"RequestRegisterLists","t":8,"sn":"RequestRegisterLists","rt":$n[0].Void},{"a":2,"n":"Update","t":8,"pi":[{"n":"delta","pt":$n[0].Single,"ps":0}],"sn":"Update","rt":$n[0].Void,"p":[$n[0].Single]},{"a":1,"n":"length","t":4,"rt":$n[3].List$1(System.Single),"sn":"length"},{"a":1,"n":"lists","t":4,"rt":$n[3].List$1(System.Collections.IList),"sn":"lists"},{"a":1,"n":"progress","t":4,"rt":$n[3].List$1(System.Single),"sn":"progress"},{"a":1,"n":"targets","t":4,"rt":$n[3].List$1(System.Int32),"sn":"targets"}]}; });
    $m("Pidroh.TextRendering.TextAnimation.BaseData", function () { return {"td":$n[1].TextAnimation,"att":1048842,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[0].Single,$n[0].Single,$n[0].Int32],"pi":[{"n":"length","pt":$n[0].Single,"ps":0},{"n":"progress","pt":$n[0].Single,"ps":1},{"n":"target","pt":$n[0].Int32,"ps":2}],"sn":"$ctor1"},{"a":2,"n":"length","t":4,"rt":$n[0].Single,"sn":"length","ro":true,"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"progress","t":4,"rt":$n[0].Single,"sn":"progress","ro":true,"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"target","t":4,"rt":$n[0].Int32,"sn":"target","ro":true,"box":function ($v) { return Bridge.box($v, System.Int32);}}]}; });
    $m("Pidroh.TextRendering.Vector2D", function () { return {"att":1057033,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":".ctor","t":1,"p":[$n[0].Single],"pi":[{"n":"value","pt":$n[0].Single,"ps":0}],"sn":"$ctor1"},{"a":2,"n":".ctor","t":1,"p":[$n[0].Single,$n[0].Single],"pi":[{"n":"x","pt":$n[0].Single,"ps":0},{"n":"y","pt":$n[0].Single,"ps":1}],"sn":"$ctor2"},{"a":2,"n":"Add","is":true,"t":8,"pi":[{"n":"value1","pt":$n[1].Vector2D,"ps":0},{"n":"value2","pt":$n[1].Vector2D,"ps":1}],"sn":"Add","rt":$n[1].Vector2D,"p":[$n[1].Vector2D,$n[1].Vector2D]},{"a":2,"n":"Add","is":true,"t":8,"pi":[{"n":"value1","ref":true,"pt":$n[1].Vector2D,"ps":0},{"n":"value2","ref":true,"pt":$n[1].Vector2D,"ps":1},{"n":"result","out":true,"pt":$n[1].Vector2D,"ps":2}],"sn":"Add$1","rt":$n[0].Void,"p":[$n[1].Vector2D,$n[1].Vector2D,$n[1].Vector2D]},{"a":2,"n":"Distance","is":true,"t":8,"pi":[{"n":"value1","pt":$n[1].Vector2D,"ps":0},{"n":"value2","pt":$n[1].Vector2D,"ps":1}],"sn":"Distance","rt":$n[0].Single,"p":[$n[1].Vector2D,$n[1].Vector2D],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"Distance","is":true,"t":8,"pi":[{"n":"value1","ref":true,"pt":$n[1].Vector2D,"ps":0},{"n":"value2","ref":true,"pt":$n[1].Vector2D,"ps":1},{"n":"result","out":true,"pt":$n[0].Single,"ps":2}],"sn":"Distance$1","rt":$n[0].Void,"p":[$n[1].Vector2D,$n[1].Vector2D,$n[0].Single]},{"a":2,"n":"DistanceSquared","is":true,"t":8,"pi":[{"n":"value1","pt":$n[1].Vector2D,"ps":0},{"n":"value2","pt":$n[1].Vector2D,"ps":1}],"sn":"DistanceSquared","rt":$n[0].Single,"p":[$n[1].Vector2D,$n[1].Vector2D],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"DistanceSquared","is":true,"t":8,"pi":[{"n":"value1","ref":true,"pt":$n[1].Vector2D,"ps":0},{"n":"value2","ref":true,"pt":$n[1].Vector2D,"ps":1},{"n":"result","out":true,"pt":$n[0].Single,"ps":2}],"sn":"DistanceSquared$1","rt":$n[0].Void,"p":[$n[1].Vector2D,$n[1].Vector2D,$n[0].Single]},{"a":2,"n":"Divide","is":true,"t":8,"pi":[{"n":"value1","pt":$n[1].Vector2D,"ps":0},{"n":"value2","pt":$n[1].Vector2D,"ps":1}],"sn":"Divide","rt":$n[1].Vector2D,"p":[$n[1].Vector2D,$n[1].Vector2D]},{"a":2,"n":"Divide","is":true,"t":8,"pi":[{"n":"value1","pt":$n[1].Vector2D,"ps":0},{"n":"divider","pt":$n[0].Single,"ps":1}],"sn":"Divide$1","rt":$n[1].Vector2D,"p":[$n[1].Vector2D,$n[0].Single]},{"a":2,"n":"Divide","is":true,"t":8,"pi":[{"n":"value1","ref":true,"pt":$n[1].Vector2D,"ps":0},{"n":"value2","ref":true,"pt":$n[1].Vector2D,"ps":1},{"n":"result","out":true,"pt":$n[1].Vector2D,"ps":2}],"sn":"Divide$2","rt":$n[0].Void,"p":[$n[1].Vector2D,$n[1].Vector2D,$n[1].Vector2D]},{"a":2,"n":"Divide","is":true,"t":8,"pi":[{"n":"value1","ref":true,"pt":$n[1].Vector2D,"ps":0},{"n":"divider","pt":$n[0].Single,"ps":1},{"n":"result","out":true,"pt":$n[1].Vector2D,"ps":2}],"sn":"Divide$3","rt":$n[0].Void,"p":[$n[1].Vector2D,$n[0].Single,$n[1].Vector2D]},{"a":2,"n":"Dot","is":true,"t":8,"pi":[{"n":"value1","pt":$n[1].Vector2D,"ps":0},{"n":"value2","pt":$n[1].Vector2D,"ps":1}],"sn":"Dot","rt":$n[0].Single,"p":[$n[1].Vector2D,$n[1].Vector2D],"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"Dot","is":true,"t":8,"pi":[{"n":"value1","ref":true,"pt":$n[1].Vector2D,"ps":0},{"n":"value2","ref":true,"pt":$n[1].Vector2D,"ps":1},{"n":"result","out":true,"pt":$n[0].Single,"ps":2}],"sn":"Dot$1","rt":$n[0].Void,"p":[$n[1].Vector2D,$n[1].Vector2D,$n[0].Single]},{"a":2,"n":"Equals","t":8,"pi":[{"n":"other","pt":$n[1].Vector2D,"ps":0}],"sn":"equalsT","rt":$n[0].Boolean,"p":[$n[1].Vector2D],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"ov":true,"a":2,"n":"Equals","t":8,"pi":[{"n":"obj","pt":$n[0].Object,"ps":0}],"sn":"equals","rt":$n[0].Boolean,"p":[$n[0].Object],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"ov":true,"a":2,"n":"GetHashCode","t":8,"sn":"getHashCode","rt":$n[0].Int32,"box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":2,"n":"InterpolateRounded","is":true,"t":8,"pi":[{"n":"startPosition","pt":$n[1].Vector2D,"ps":0},{"n":"endPosition","pt":$n[1].Vector2D,"ps":1},{"n":"ratio","pt":$n[0].Single,"ps":2}],"sn":"InterpolateRounded","rt":$n[1].Vector2D,"p":[$n[1].Vector2D,$n[1].Vector2D,$n[0].Single]},{"a":2,"n":"Length","t":8,"sn":"Length","rt":$n[0].Single,"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"LengthSquared","t":8,"sn":"LengthSquared","rt":$n[0].Single,"box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"Max","is":true,"t":8,"pi":[{"n":"value1","pt":$n[1].Vector2D,"ps":0},{"n":"value2","pt":$n[1].Vector2D,"ps":1}],"sn":"Max","rt":$n[1].Vector2D,"p":[$n[1].Vector2D,$n[1].Vector2D]},{"a":2,"n":"Max","is":true,"t":8,"pi":[{"n":"value1","ref":true,"pt":$n[1].Vector2D,"ps":0},{"n":"value2","ref":true,"pt":$n[1].Vector2D,"ps":1},{"n":"result","out":true,"pt":$n[1].Vector2D,"ps":2}],"sn":"Max$1","rt":$n[0].Void,"p":[$n[1].Vector2D,$n[1].Vector2D,$n[1].Vector2D]},{"a":2,"n":"Min","is":true,"t":8,"pi":[{"n":"value1","pt":$n[1].Vector2D,"ps":0},{"n":"value2","pt":$n[1].Vector2D,"ps":1}],"sn":"Min","rt":$n[1].Vector2D,"p":[$n[1].Vector2D,$n[1].Vector2D]},{"a":2,"n":"Min","is":true,"t":8,"pi":[{"n":"value1","ref":true,"pt":$n[1].Vector2D,"ps":0},{"n":"value2","ref":true,"pt":$n[1].Vector2D,"ps":1},{"n":"result","out":true,"pt":$n[1].Vector2D,"ps":2}],"sn":"Min$1","rt":$n[0].Void,"p":[$n[1].Vector2D,$n[1].Vector2D,$n[1].Vector2D]},{"a":2,"n":"Multiply","is":true,"t":8,"pi":[{"n":"value1","pt":$n[1].Vector2D,"ps":0},{"n":"value2","pt":$n[1].Vector2D,"ps":1}],"sn":"Multiply","rt":$n[1].Vector2D,"p":[$n[1].Vector2D,$n[1].Vector2D]},{"a":2,"n":"Multiply","is":true,"t":8,"pi":[{"n":"value1","pt":$n[1].Vector2D,"ps":0},{"n":"scaleFactor","pt":$n[0].Single,"ps":1}],"sn":"Multiply$1","rt":$n[1].Vector2D,"p":[$n[1].Vector2D,$n[0].Single]},{"a":2,"n":"Multiply","is":true,"t":8,"pi":[{"n":"value1","ref":true,"pt":$n[1].Vector2D,"ps":0},{"n":"value2","ref":true,"pt":$n[1].Vector2D,"ps":1},{"n":"result","out":true,"pt":$n[1].Vector2D,"ps":2}],"sn":"Multiply$2","rt":$n[0].Void,"p":[$n[1].Vector2D,$n[1].Vector2D,$n[1].Vector2D]},{"a":2,"n":"Multiply","is":true,"t":8,"pi":[{"n":"value1","ref":true,"pt":$n[1].Vector2D,"ps":0},{"n":"scaleFactor","pt":$n[0].Single,"ps":1},{"n":"result","out":true,"pt":$n[1].Vector2D,"ps":2}],"sn":"Multiply$3","rt":$n[0].Void,"p":[$n[1].Vector2D,$n[0].Single,$n[1].Vector2D]},{"a":2,"n":"Negate","is":true,"t":8,"pi":[{"n":"value","pt":$n[1].Vector2D,"ps":0}],"sn":"Negate","rt":$n[1].Vector2D,"p":[$n[1].Vector2D]},{"a":2,"n":"Negate","is":true,"t":8,"pi":[{"n":"value","ref":true,"pt":$n[1].Vector2D,"ps":0},{"n":"result","out":true,"pt":$n[1].Vector2D,"ps":1}],"sn":"Negate$1","rt":$n[0].Void,"p":[$n[1].Vector2D,$n[1].Vector2D]},{"a":2,"n":"Normalize","t":8,"sn":"Normalize","rt":$n[0].Void},{"a":2,"n":"Normalize","is":true,"t":8,"pi":[{"n":"value","pt":$n[1].Vector2D,"ps":0}],"sn":"Normalize","rt":$n[1].Vector2D,"p":[$n[1].Vector2D]},{"a":2,"n":"Normalize","is":true,"t":8,"pi":[{"n":"value","ref":true,"pt":$n[1].Vector2D,"ps":0},{"n":"result","out":true,"pt":$n[1].Vector2D,"ps":1}],"sn":"Normalize$1","rt":$n[0].Void,"p":[$n[1].Vector2D,$n[1].Vector2D]},{"a":2,"n":"Reflect","is":true,"t":8,"pi":[{"n":"vector","pt":$n[1].Vector2D,"ps":0},{"n":"normal","pt":$n[1].Vector2D,"ps":1}],"sn":"Reflect","rt":$n[1].Vector2D,"p":[$n[1].Vector2D,$n[1].Vector2D]},{"a":2,"n":"Reflect","is":true,"t":8,"pi":[{"n":"vector","ref":true,"pt":$n[1].Vector2D,"ps":0},{"n":"normal","ref":true,"pt":$n[1].Vector2D,"ps":1},{"n":"result","out":true,"pt":$n[1].Vector2D,"ps":2}],"sn":"Reflect$1","rt":$n[0].Void,"p":[$n[1].Vector2D,$n[1].Vector2D,$n[1].Vector2D]},{"a":1,"n":"Round","t":8,"sn":"Round","rt":$n[1].Vector2D},{"a":2,"n":"Subtract","is":true,"t":8,"pi":[{"n":"value1","pt":$n[1].Vector2D,"ps":0},{"n":"value2","pt":$n[1].Vector2D,"ps":1}],"sn":"Subtract","rt":$n[1].Vector2D,"p":[$n[1].Vector2D,$n[1].Vector2D]},{"a":2,"n":"Subtract","is":true,"t":8,"pi":[{"n":"value1","ref":true,"pt":$n[1].Vector2D,"ps":0},{"n":"value2","ref":true,"pt":$n[1].Vector2D,"ps":1},{"n":"result","out":true,"pt":$n[1].Vector2D,"ps":2}],"sn":"Subtract$1","rt":$n[0].Void,"p":[$n[1].Vector2D,$n[1].Vector2D,$n[1].Vector2D]},{"ov":true,"a":2,"n":"ToString","t":8,"sn":"toString","rt":$n[0].String},{"a":2,"n":"op_Addition","is":true,"t":8,"pi":[{"n":"value1","pt":$n[1].Vector2D,"ps":0},{"n":"value2","pt":$n[1].Vector2D,"ps":1}],"sn":"op_Addition","rt":$n[1].Vector2D,"p":[$n[1].Vector2D,$n[1].Vector2D]},{"a":2,"n":"op_Division","is":true,"t":8,"pi":[{"n":"value1","pt":$n[1].Vector2D,"ps":0},{"n":"value2","pt":$n[1].Vector2D,"ps":1}],"sn":"op_Division","rt":$n[1].Vector2D,"p":[$n[1].Vector2D,$n[1].Vector2D]},{"a":2,"n":"op_Division","is":true,"t":8,"pi":[{"n":"value1","pt":$n[1].Vector2D,"ps":0},{"n":"divider","pt":$n[0].Single,"ps":1}],"sn":"op_Division$1","rt":$n[1].Vector2D,"p":[$n[1].Vector2D,$n[0].Single]},{"a":2,"n":"op_Equality","is":true,"t":8,"pi":[{"n":"value1","pt":$n[1].Vector2D,"ps":0},{"n":"value2","pt":$n[1].Vector2D,"ps":1}],"sn":"op_Equality","rt":$n[0].Boolean,"p":[$n[1].Vector2D,$n[1].Vector2D],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"op_Inequality","is":true,"t":8,"pi":[{"n":"value1","pt":$n[1].Vector2D,"ps":0},{"n":"value2","pt":$n[1].Vector2D,"ps":1}],"sn":"op_Inequality","rt":$n[0].Boolean,"p":[$n[1].Vector2D,$n[1].Vector2D],"box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":2,"n":"op_Multiply","is":true,"t":8,"pi":[{"n":"value1","pt":$n[1].Vector2D,"ps":0},{"n":"value2","pt":$n[1].Vector2D,"ps":1}],"sn":"op_Multiply","rt":$n[1].Vector2D,"p":[$n[1].Vector2D,$n[1].Vector2D]},{"a":2,"n":"op_Multiply","is":true,"t":8,"pi":[{"n":"value","pt":$n[1].Vector2D,"ps":0},{"n":"scaleFactor","pt":$n[0].Single,"ps":1}],"sn":"op_Multiply$1","rt":$n[1].Vector2D,"p":[$n[1].Vector2D,$n[0].Single]},{"a":2,"n":"op_Multiply","is":true,"t":8,"pi":[{"n":"scaleFactor","pt":$n[0].Single,"ps":0},{"n":"value","pt":$n[1].Vector2D,"ps":1}],"sn":"op_Multiply$2","rt":$n[1].Vector2D,"p":[$n[0].Single,$n[1].Vector2D]},{"a":2,"n":"op_Subtraction","is":true,"t":8,"pi":[{"n":"value1","pt":$n[1].Vector2D,"ps":0},{"n":"value2","pt":$n[1].Vector2D,"ps":1}],"sn":"op_Subtraction","rt":$n[1].Vector2D,"p":[$n[1].Vector2D,$n[1].Vector2D]},{"a":2,"n":"op_UnaryNegation","is":true,"t":8,"pi":[{"n":"value","pt":$n[1].Vector2D,"ps":0}],"sn":"op_UnaryNegation","rt":$n[1].Vector2D,"p":[$n[1].Vector2D]},{"a":2,"n":"One","is":true,"t":16,"rt":$n[1].Vector2D,"g":{"a":2,"n":"get_One","t":8,"rt":$n[1].Vector2D,"fg":"One","is":true},"fn":"One"},{"a":2,"n":"UnitX","is":true,"t":16,"rt":$n[1].Vector2D,"g":{"a":2,"n":"get_UnitX","t":8,"rt":$n[1].Vector2D,"fg":"UnitX","is":true},"fn":"UnitX"},{"a":2,"n":"UnitY","is":true,"t":16,"rt":$n[1].Vector2D,"g":{"a":2,"n":"get_UnitY","t":8,"rt":$n[1].Vector2D,"fg":"UnitY","is":true},"fn":"UnitY"},{"a":2,"n":"Zero","is":true,"t":16,"rt":$n[1].Vector2D,"g":{"a":2,"n":"get_Zero","t":8,"rt":$n[1].Vector2D,"fg":"Zero","is":true},"fn":"Zero"},{"a":2,"n":"X","t":4,"rt":$n[0].Single,"sn":"X","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":2,"n":"Y","t":4,"rt":$n[0].Single,"sn":"Y","box":function ($v) { return Bridge.box($v, System.Single, System.Single.format, System.Single.getHashCode);}},{"a":1,"n":"unitVector","is":true,"t":4,"rt":$n[1].Vector2D,"sn":"unitVector"},{"a":1,"n":"unitXVector","is":true,"t":4,"rt":$n[1].Vector2D,"sn":"unitXVector"},{"a":1,"n":"unitYVector","is":true,"t":4,"rt":$n[1].Vector2D,"sn":"unitYVector"},{"a":1,"n":"zeroVector","is":true,"t":4,"rt":$n[1].Vector2D,"sn":"zeroVector"}]}; });
    $m("BridgeBuild.App", function () { return {"att":1048577,"a":2,"m":[{"a":2,"isSynthetic":true,"n":".ctor","t":1,"sn":"ctor"},{"a":2,"n":"Main","is":true,"t":8,"sn":"Main","rt":$n[0].Void},{"a":1,"n":"SetupGame","is":true,"t":8,"pi":[{"n":"gr","out":true,"pt":$n[2].GameMain,"ps":0},{"n":"TextBoard","out":true,"pt":$n[1].TextBoard,"ps":1}],"sn":"SetupGame","rt":$n[0].Void,"p":[$n[2].GameMain,$n[1].TextBoard]},{"a":1,"n":"UpdateGame","is":true,"t":8,"sn":"UpdateGame","rt":$n[0].Void},{"a":1,"n":"TextBoard","is":true,"t":4,"rt":$n[1].TextBoard,"sn":"TextBoard"},{"a":1,"n":"buffer","is":true,"t":4,"rt":$n[0].Int32,"sn":"buffer","box":function ($v) { return Bridge.box($v, System.Int32);}},{"a":1,"n":"bufferOn","is":true,"t":4,"rt":$n[0].Boolean,"sn":"bufferOn","box":function ($v) { return Bridge.box($v, System.Boolean, System.Boolean.toString);}},{"a":1,"n":"colors","is":true,"t":4,"rt":$n[0].Array.type(System.String),"sn":"colors"},{"a":1,"n":"gr","is":true,"t":4,"rt":$n[2].GameMain,"sn":"gr"}]}; });
});
